Index: GUI_JAVAFX/src/main/java/com/example/gui_javafx/EnergyGuiController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gui_javafx;\r\n\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport javafx.application.Platform;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.*;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.net.URI;\r\nimport java.net.http.HttpClient;\r\nimport java.net.http.HttpRequest;\r\nimport java.net.http.HttpResponse;\r\nimport java.time.LocalDate;\r\nimport java.util.List;\r\n\r\npublic class EnergyGuiController {\r\n\r\n    @FXML\r\n    private Label communityLabel;\r\n\r\n    @FXML\r\n    private Label gridLabel;\r\n\r\n    @FXML\r\n    private Button refreshButton;\r\n\r\n    @FXML\r\n    private Button showDataButton;\r\n\r\n    @FXML\r\n    private DatePicker startDate;\r\n\r\n    @FXML\r\n    private DatePicker endDate;\r\n\r\n    @FXML\r\n    private TextArea outputArea;\r\n\r\n    private final HttpClient client = HttpClient.newHttpClient();\r\n    private final Gson gson = new Gson();\r\n\r\n    @FXML\r\n    public void initialize() {\r\n        refreshButton.setOnAction(e -> fetchCurrentData());\r\n        showDataButton.setOnAction(e -> fetchHistoricalData());\r\n    }\r\n\r\n    private void fetchCurrentData() {\r\n        try {\r\n            HttpRequest request = HttpRequest.newBuilder()\r\n                    .uri(new URI(\"http://localhost:8080/energy/current\"))\r\n                    .build();\r\n\r\n            client.sendAsync(request, HttpResponse.BodyHandlers.ofString())\r\n                    .thenApply(HttpResponse::body)\r\n                    .thenAccept(response -> {\r\n                        CurrentEnergyData data = gson.fromJson(response, CurrentEnergyData.class);\r\n                        Platform.runLater(() -> {\r\n                            communityLabel.setText(\"Community Pool: \" + data.communityUsed + \"% used\");\r\n                            gridLabel.setText(\"Grid Portion: \" + data.gridPortion + \"%\");\r\n                        });\r\n                    });\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    private void fetchHistoricalData() {\r\n        LocalDate start = startDate.getValue();\r\n        LocalDate end = endDate.getValue();\r\n\r\n        if (start == null || end == null) {\r\n            outputArea.setText(\"Bitte Start- und Enddatum auswählen.\");\r\n            return;\r\n        }\r\n\r\n        String startStr = start.atStartOfDay().toString();\r\n        String endStr = end.atTime(23, 59).toString();\r\n\r\n        try {\r\n            String url = String.format(\"http://localhost:8080/energy/historical?start=%s&end=%s\", startStr, endStr);\r\n\r\n            HttpRequest request = HttpRequest.newBuilder()\r\n                    .uri(new URI(url))\r\n                    .build();\r\n\r\n            client.sendAsync(request, HttpResponse.BodyHandlers.ofString())\r\n                    .thenApply(HttpResponse::body)\r\n                    .thenAccept(response -> {\r\n                        Type listType = new TypeToken<List<EnergyUsageEntry>>(){}.getType();\r\n                        List<EnergyUsageEntry> list = gson.fromJson(response, listType);\r\n\r\n                        StringBuilder sb = new StringBuilder();\r\n                        for (EnergyUsageEntry entry : list) {\r\n                            sb.append(\"[\").append(entry.hour).append(\"] \")\r\n                                    .append(\"Produced: \").append(entry.communityProduced).append(\" kWh, \")\r\n                                    .append(\"Used: \").append(entry.communityUsed).append(\" kWh, \")\r\n                                    .append(\"Grid: \").append(entry.gridUsed).append(\" kWh\\n\");\r\n                        }\r\n\r\n                        Platform.runLater(() -> outputArea.setText(sb.toString()));\r\n                    });\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    // Klassen für JSON-Mapping\r\n    private static class CurrentEnergyData {\r\n        double communityUsed;\r\n        double gridPortion;\r\n    }\r\n\r\n    private static class EnergyUsageEntry {\r\n        String hour;\r\n        double communityProduced;\r\n        double communityUsed;\r\n        double gridUsed;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GUI_JAVAFX/src/main/java/com/example/gui_javafx/EnergyGuiController.java b/GUI_JAVAFX/src/main/java/com/example/gui_javafx/EnergyGuiController.java
--- a/GUI_JAVAFX/src/main/java/com/example/gui_javafx/EnergyGuiController.java	(revision b8e247c309855dd7509180a56854152c0d7a2c67)
+++ b/GUI_JAVAFX/src/main/java/com/example/gui_javafx/EnergyGuiController.java	(date 1745406671513)
@@ -1,16 +1,15 @@
 package com.example.gui_javafx;
 
+import com.example.gui_javafx.CurrentData;
+import com.example.gui_javafx.HistoricalData;
 import com.google.gson.Gson;
 import com.google.gson.reflect.TypeToken;
-import javafx.application.Platform;
 import javafx.fxml.FXML;
 import javafx.scene.control.*;
-
+import java.io.InputStreamReader;
 import java.lang.reflect.Type;
-import java.net.URI;
-import java.net.http.HttpClient;
-import java.net.http.HttpRequest;
-import java.net.http.HttpResponse;
+import java.net.HttpURLConnection;
+import java.net.URL;
 import java.time.LocalDate;
 import java.util.List;
 
@@ -25,20 +24,20 @@
     @FXML
     private Button refreshButton;
 
-    @FXML
-    private Button showDataButton;
-
     @FXML
     private DatePicker startDate;
 
     @FXML
     private DatePicker endDate;
 
+    @FXML
+    private Button showDataButton;
+
     @FXML
     private TextArea outputArea;
 
-    private final HttpClient client = HttpClient.newHttpClient();
     private final Gson gson = new Gson();
+    private final String BASE_URL = "http://localhost:8080/energy"; // ggf. anpassen
 
     @FXML
     public void initialize() {
@@ -48,78 +47,52 @@
 
     private void fetchCurrentData() {
         try {
-            HttpRequest request = HttpRequest.newBuilder()
-                    .uri(new URI("http://localhost:8080/energy/current"))
-                    .build();
+            HttpURLConnection conn = (HttpURLConnection) new URL(BASE_URL + "/current").openConnection();
+            conn.setRequestMethod("GET");
+            InputStreamReader reader = new InputStreamReader(conn.getInputStream());
 
-            client.sendAsync(request, HttpResponse.BodyHandlers.ofString())
-                    .thenApply(HttpResponse::body)
-                    .thenAccept(response -> {
-                        CurrentEnergyData data = gson.fromJson(response, CurrentEnergyData.class);
-                        Platform.runLater(() -> {
-                            communityLabel.setText("Community Pool: " + data.communityUsed + "% used");
-                            gridLabel.setText("Grid Portion: " + data.gridPortion + "%");
-                        });
-                    });
-        } catch (Exception e) {
-            e.printStackTrace();
+            CurrentData data = gson.fromJson(reader, CurrentData.class);
+            communityLabel.setText("Community Pool: " + data.getCommunity() + " %");
+            gridLabel.setText("Grid Portion: " + data.getGrid() + " %");
 
+            conn.disconnect();
+        } catch (Exception ex) {
+            ex.printStackTrace();
+            outputArea.setText("Error fetching current data.");
         }
-
-
-
     }
 
     private void fetchHistoricalData() {
         LocalDate start = startDate.getValue();
         LocalDate end = endDate.getValue();
-
         if (start == null || end == null) {
-            outputArea.setText("Bitte Start- und Enddatum auswählen.");
+            outputArea.setText("Please select start and end dates.");
             return;
         }
 
-        String startStr = start.atStartOfDay().toString();
-        String endStr = end.atTime(23, 59).toString();
-
         try {
-            String url = String.format("http://localhost:8080/energy/historical?start=%s&end=%s", startStr, endStr);
+            String url = BASE_URL + "/historical?start=" + start + "T00:00&end=" + end + "T23:59";
+            HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();
+            conn.setRequestMethod("GET");
+            InputStreamReader reader = new InputStreamReader(conn.getInputStream());
 
-            HttpRequest request = HttpRequest.newBuilder()
-                    .uri(new URI(url))
-                    .build();
-
-            client.sendAsync(request, HttpResponse.BodyHandlers.ofString())
-                    .thenApply(HttpResponse::body)
-                    .thenAccept(response -> {
-                        Type listType = new TypeToken<List<EnergyUsageEntry>>(){}.getType();
-                        List<EnergyUsageEntry> list = gson.fromJson(response, listType);
+            Type listType = new TypeToken<List<com.example.gui_javafx.HistoricalData>>() {}.getType();
+            List<HistoricalData> dataList = gson.fromJson(reader, listType);
 
-                        StringBuilder sb = new StringBuilder();
-                        for (EnergyUsageEntry entry : list) {
-                            sb.append("[").append(entry.hour).append("] ")
-                                    .append("Produced: ").append(entry.communityProduced).append(" kWh, ")
-                                    .append("Used: ").append(entry.communityUsed).append(" kWh, ")
-                                    .append("Grid: ").append(entry.gridUsed).append(" kWh\n");
-                        }
+            StringBuilder sb = new StringBuilder();
+            for (HistoricalData d : dataList) {
+                sb.append("Time: ").append(d.getTime()).append("\n")
+                        .append("Produced: ").append(d.getProduced()).append(" kWh\n")
+                        .append("Used: ").append(d.getUsed()).append(" kWh\n")
+                        .append("Grid: ").append(d.getGrid()).append(" kWh\n\n");
+            }
 
-                        Platform.runLater(() -> outputArea.setText(sb.toString()));
-                    });
-        } catch (Exception e) {
-            e.printStackTrace();
+            outputArea.setText(sb.toString());
+            conn.disconnect();
+        } catch (Exception ex) {
+            ex.printStackTrace();
+            outputArea.setText("Error fetching historical data.");
         }
     }
-
-    // Klassen für JSON-Mapping
-    private static class CurrentEnergyData {
-        double communityUsed;
-        double gridPortion;
-    }
 
-    private static class EnergyUsageEntry {
-        String hour;
-        double communityProduced;
-        double communityUsed;
-        double gridUsed;
-    }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"22f1e871-6931-41d5-ad62-c4f2e410f741\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/GUI_JAVAFX/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/GUI_JAVAFX/pom.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/GUI_JAVAFX/src/main/java/com/example/gui_javafx/EnergyGuiApp.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/GUI_JAVAFX/src/main/java/com/example/gui_javafx/EnergyGuiApp.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/GUI_JAVAFX/src/main/java/com/example/gui_javafx/EnergyGuiController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/GUI_JAVAFX/src/main/java/com/example/gui_javafx/EnergyGuiController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/GUI_JAVAFX/src/main/java/module-info.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/GUI_JAVAFX/src/main/java/module-info.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"package-info\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"feature-ID1-RESTAPI\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;kopernike&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/kopernike/Energy-Base-DSTB.git&quot;,\r\n    &quot;accountId&quot;: &quot;5d9f753f-2f72-4626-9de0-ba23f845bbdb&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2uUkFaRfBuVSxhjGlMP4t0Ir8T0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.EnergyGuiApp.executor\": \"Run\",\r\n    \"HTTP Request.generated-requests | #1.executor\": \"Run\",\r\n    \"HTTP Request.generated-requests | #2.executor\": \"Run\",\r\n    \"HTTP Request.generated-requests | #3.executor\": \"Run\",\r\n    \"RequestMappingsPanelOrder0\": \"0\",\r\n    \"RequestMappingsPanelOrder1\": \"1\",\r\n    \"RequestMappingsPanelWidth0\": \"75\",\r\n    \"RequestMappingsPanelWidth1\": \"75\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"Spring Boot.DemoApplication.executor\": \"Run\",\r\n    \"git-widget-placeholder\": \"feature-ID2-JavaFX\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/Muhammed Kacakci/Desktop/Energy-Base-Project\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Modules\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"settings.editor.selected.configurable\": \"MavenSettings\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Application.EnergyGuiApp\">\r\n    <configuration name=\"EnergyGuiApp\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.gui_javafx.EnergyGuiApp\" />\r\n      <module name=\"GUI_JAVAFX\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.gui_javafx.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"generated-requests | #1\" type=\"HttpClient.HttpRequestRunConfigurationType\" factoryName=\"HTTP Request\" temporary=\"true\" nameIsGenerated=\"true\" path=\"$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http\" executionIdentifier=\"#1\" runType=\"Run single request\">\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"generated-requests | #2\" type=\"HttpClient.HttpRequestRunConfigurationType\" factoryName=\"HTTP Request\" temporary=\"true\" nameIsGenerated=\"true\" path=\"$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http\" executionIdentifier=\"#2\" index=\"2\" runType=\"Run single request\">\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"generated-requests | #3\" type=\"HttpClient.HttpRequestRunConfigurationType\" factoryName=\"HTTP Request\" temporary=\"true\" nameIsGenerated=\"true\" path=\"$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http\" executionIdentifier=\"#3\" index=\"3\" runType=\"Run single request\">\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"DemoApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"demo\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.demo.DemoApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.EnergyGuiApp\" />\r\n        <item itemvalue=\"HTTP Request.generated-requests | #3\" />\r\n        <item itemvalue=\"HTTP Request.generated-requests | #2\" />\r\n        <item itemvalue=\"HTTP Request.generated-requests | #1\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-a94e463ab2e7-intellij.indexing.shared.core-IU-243.25659.59\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-IU-243.25659.59\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"22f1e871-6931-41d5-ad62-c4f2e410f741\" name=\"Changes\" comment=\"\" />\r\n      <created>1742310437631</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1742310437631</updated>\r\n      <workItem from=\"1742310438826\" duration=\"5713000\" />\r\n      <workItem from=\"1742379345404\" duration=\"2000\" />\r\n      <workItem from=\"1742652406297\" duration=\"36000\" />\r\n      <workItem from=\"1743002033329\" duration=\"5001000\" />\r\n      <workItem from=\"1743604070186\" duration=\"572000\" />\r\n      <workItem from=\"1744105387798\" duration=\"1855000\" />\r\n      <workItem from=\"1745058281668\" duration=\"4467000\" />\r\n      <workItem from=\"1745069174237\" duration=\"81000\" />\r\n      <workItem from=\"1745069328099\" duration=\"161000\" />\r\n      <workItem from=\"1745069591152\" duration=\"9697000\" />\r\n      <workItem from=\"1745233831651\" duration=\"1725000\" />\r\n      <workItem from=\"1745318723899\" duration=\"334000\" />\r\n      <workItem from=\"1745333514578\" duration=\"2401000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b8e247c309855dd7509180a56854152c0d7a2c67)
+++ b/.idea/workspace.xml	(date 1745415284775)
@@ -6,10 +6,9 @@
   <component name="ChangeListManager">
     <list default="true" id="22f1e871-6931-41d5-ad62-c4f2e410f741" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/GUI_JAVAFX/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/GUI_JAVAFX/pom.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/GUI_JAVAFX/src/main/java/com/example/gui_javafx/EnergyGuiApp.java" beforeDir="false" afterPath="$PROJECT_DIR$/GUI_JAVAFX/src/main/java/com/example/gui_javafx/EnergyGuiApp.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/GUI_JAVAFX/src/main/java/com/example/gui_javafx/EnergyGuiController.java" beforeDir="false" afterPath="$PROJECT_DIR$/GUI_JAVAFX/src/main/java/com/example/gui_javafx/EnergyGuiController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/GUI_JAVAFX/src/main/java/module-info.java" beforeDir="false" afterPath="$PROJECT_DIR$/GUI_JAVAFX/src/main/java/module-info.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/REST API SPRING/src/main/java/com/example/demo/model/CurrentEnergyData.java" beforeDir="false" afterPath="$PROJECT_DIR$/REST API SPRING/src/main/java/com/example/demo/model/CurrentEnergyData.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -44,6 +43,10 @@
     &quot;accountId&quot;: &quot;5d9f753f-2f72-4626-9de0-ba23f845bbdb&quot;
   }
 }</component>
+  <component name="KubernetesApiPersistence"><![CDATA[{}]]></component>
+  <component name="KubernetesApiProvider"><![CDATA[{
+  "isMigrated": true
+}]]></component>
   <component name="MavenImportPreferences">
     <option name="generalSettings">
       <MavenGeneralSettings>
@@ -60,35 +63,35 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Application.EnergyGuiApp.executor": "Run",
-    "HTTP Request.generated-requests | #1.executor": "Run",
-    "HTTP Request.generated-requests | #2.executor": "Run",
-    "HTTP Request.generated-requests | #3.executor": "Run",
-    "RequestMappingsPanelOrder0": "0",
-    "RequestMappingsPanelOrder1": "1",
-    "RequestMappingsPanelWidth0": "75",
-    "RequestMappingsPanelWidth1": "75",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.git.unshallow": "true",
-    "Spring Boot.DemoApplication.executor": "Run",
-    "git-widget-placeholder": "feature-ID2-JavaFX",
-    "ignore.virus.scanning.warn.message": "true",
-    "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "C:/Users/Muhammed Kacakci/Desktop/Energy-Base-Project",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "project.structure.last.edited": "Modules",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.2",
-    "settings.editor.selected.configurable": "MavenSettings",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Application.EnergyGuiApp.executor&quot;: &quot;Run&quot;,
+    &quot;HTTP Request.generated-requests | #1.executor&quot;: &quot;Run&quot;,
+    &quot;HTTP Request.generated-requests | #2.executor&quot;: &quot;Run&quot;,
+    &quot;HTTP Request.generated-requests | #3.executor&quot;: &quot;Run&quot;,
+    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
+    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
+    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
+    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
+    &quot;Spring Boot.DemoApplication.executor&quot;: &quot;Run&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;feature-ID2-fixes&quot;,
+    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/Muhammed Kacakci/Downloads/energy (2)&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;MavenSettings&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RunManager" selected="Application.EnergyGuiApp">
     <configuration name="EnergyGuiApp" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="com.example.gui_javafx.EnergyGuiApp" />
@@ -122,8 +125,8 @@
     <recent_temporary>
       <list>
         <item itemvalue="Application.EnergyGuiApp" />
-        <item itemvalue="HTTP Request.generated-requests | #3" />
         <item itemvalue="HTTP Request.generated-requests | #2" />
+        <item itemvalue="HTTP Request.generated-requests | #3" />
         <item itemvalue="HTTP Request.generated-requests | #1" />
       </list>
     </recent_temporary>
@@ -156,7 +159,9 @@
       <workItem from="1745069591152" duration="9697000" />
       <workItem from="1745233831651" duration="1725000" />
       <workItem from="1745318723899" duration="334000" />
-      <workItem from="1745333514578" duration="2401000" />
+      <workItem from="1745333514578" duration="2922000" />
+      <workItem from="1745404201758" duration="2460000" />
+      <workItem from="1745409897432" duration="1937000" />
     </task>
     <servers />
   </component>
